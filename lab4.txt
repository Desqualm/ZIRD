-- 1. Utworzenie widoku pokazującego pracowników z pensją > 6000
CREATE VIEW MSU_CHMIELEWSKID.V_WYSOKIE_PENSJE AS
SELECT *
FROM MSU_CHMIELEWSKID.EMPLOYEES
WHERE SALARY > 6000;

-- 2. Zmiana definicji widoku: teraz pokazuje pracowników z pensją > 12000
CREATE OR REPLACE VIEW MSU_CHMIELEWSKID.V_WYSOKIE_PENSJE AS
SELECT *
FROM MSU_CHMIELEWSKID.EMPLOYEES
WHERE SALARY > 12000;

-- 3. Usunięcie widoku
DROP VIEW MSU_CHMIELEWSKID.V_WYSOKIE_PENSJE;

-- 4. Widok pokazujący pracowników z departamentu "Finance"
CREATE VIEW MSU_CHMIELEWSKID.V_FINANCE_EMPLOYEES AS
SELECT e.EMPLOYEE_ID, e.LAST_NAME, e.FIRST_NAME
FROM MSU_CHMIELEWSKID.EMPLOYEES e
JOIN MSU_CHMIELEWSKID.DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE d.DEPARTMENT_NAME = 'Finance';

-- 5. Widok pracowników z pensją między 5000 a 12000
CREATE VIEW MSU_CHMIELEWSKID.V_SREDNIE_PENSJE AS
SELECT EMPLOYEE_ID, LAST_NAME, FIRST_NAME, SALARY, JOB_ID, EMAIL, HIRE_DATE
FROM MSU_CHMIELEWSKID.EMPLOYEES
WHERE SALARY BETWEEN 5000 AND 12000;

-- 6. Operacje DML przez widok V_SREDNIE_PENSJE

-- a. Dodanie pracownika
INSERT INTO MSU_CHMIELEWSKID.V_SREDNIE_PENSJE (EMPLOYEE_ID, LAST_NAME, FIRST_NAME, SALARY, JOB_ID, EMAIL, HIRE_DATE)
VALUES (999, 'Nowak', 'Jan', 7000, 'IT_PROG', 'jan.nowak@example.com', TO_DATE('2023-01-15','YYYY-MM-DD'));

-- b. Edycja pracownika
UPDATE MSU_CHMIELEWSKID.V_SREDNIE_PENSJE
SET SALARY = 8000
WHERE EMPLOYEE_ID = 999;

-- c. Usunięcie pracownika
DELETE FROM MSU_CHMIELEWSKID.V_SREDNIE_PENSJE
WHERE EMPLOYEE_ID = 999;

-- 7. Widok pokazujący statystyki działów zatrudniających co najmniej 4 pracowników
CREATE VIEW MSU_CHMIELEWSKID.V_STATYSTYKI_DZIALOW AS
SELECT d.DEPARTMENT_ID, d.DEPARTMENT_NAME,
       COUNT(e.EMPLOYEE_ID) AS LICZBA_PRACOWNIKOW,
       AVG(e.SALARY) AS SREDNIA_PENSJA,
       MAX(e.SALARY) AS MAKS_PENSJA
FROM MSU_CHMIELEWSKID.DEPARTMENTS d
JOIN MSU_CHMIELEWSKID.EMPLOYEES e ON d.DEPARTMENT_ID = e.DEPARTMENT_ID
GROUP BY d.DEPARTMENT_ID, d.DEPARTMENT_NAME
HAVING COUNT(e.EMPLOYEE_ID) >= 4;

-- 8. Widok z warunkiem CHECK OPTION
CREATE VIEW MSU_CHMIELEWSKID.V_SREDNIE_PENSJE_CHECK AS
SELECT EMPLOYEE_ID, LAST_NAME, FIRST_NAME, SALARY, JOB_ID, EMAIL, HIRE_DATE
FROM MSU_CHMIELEWSKID.EMPLOYEES
WHERE SALARY BETWEEN 5000 AND 12000
WITH CHECK OPTION;

- a.i. Dodanie pracownika z pensją w dozwolonym zakresie – OK
INSERT INTO MSU_CHMIELEWSKID.V_SREDNIE_PENSJE_CHECK (EMPLOYEE_ID, LAST_NAME, FIRST_NAME, SALARY, JOB_ID, EMAIL, HIRE_DATE)
VALUES (1001, 'Kowalska', 'Anna', 9000, 'SA_REP', 'anna.kowalska@example.com', SYSDATE);

-- a.ii. Dodanie pracownika z pensją spoza zakresu – BŁĄD
INSERT INTO MSU_CHMIELEWSKID.V_SREDNIE_PENSJE_CHECK (EMPLOYEE_ID, LAST_NAME, FIRST_NAME, SALARY, JOB_ID, EMAIL, HIRE_DATE)
VALUES (1002, 'Zielinski', 'Piotr', 13000, 'SA_MAN', 'piotr.z@example.com', SYSDATE);

-- 9. Widok zmaterializowany pokazujący menedżerów i ich działy
CREATE MATERIALIZED VIEW MSU_CHMIELEWSKID.V_MANAGEROWIE AS
SELECT e.EMPLOYEE_ID, e.FIRST_NAME, e.LAST_NAME, d.DEPARTMENT_NAME
FROM MSU_CHMIELEWSKID.EMPLOYEES e
JOIN MSU_CHMIELEWSKID.DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE e.EMPLOYEE_ID IN (
    SELECT DISTINCT MANAGER_ID FROM MSU_CHMIELEWSKID.EMPLOYEES WHERE MANAGER_ID IS NOT NULL
);


-- 10. Widok zawierający 10 najlepiej opłacanych pracowników
CREATE VIEW MSU_CHMIELEWSKID.V_NAJLEPIEJ_OPLACANI AS
SELECT *
FROM (
    SELECT *
    FROM MSU_CHMIELEWSKID.EMPLOYEES
    ORDER BY SALARY DESC
)
WHERE ROWNUM <= 10;